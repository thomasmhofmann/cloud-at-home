apiVersion: v1
kind: ConfigMap
metadata:
  name: error-pages
  namespace: ingress-nginx
data:
  error-page: |
    <!--
    Copyright (c) 2022 by Thomas Hofmann
    Fork of an original workMatrix rain animation by Clive Cooper (https://codepen.io/yaclive/pen/EayLYO)
    Fork of an original work Matrix rain animation (https://codepen.io/gbnikolov/pen/sklmg

    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
    -->
    <!DOCTYPE html>
    <html>
        <head>
            <meta name="viewport" content="width=device-width, initial-scale=1">
            <title>randombits</title>
            <style type="text/css">
              * {margin: 0; padding: 0}
              body {background: #000;}
              canvas {display: block;}
            </style>
        </head>
        <body>
          <canvas ></canvas>
          <script>
            // Initialising the canvas
            var canvas = document.querySelector('canvas'),
                ctx = canvas.getContext('2d');

            // Setting the width and height of the canvas
            canvas.width = window.innerWidth - 10;
            canvas.height = window.innerHeight - 10;

            // Setting up the letters
            var letters = '10';
            letters = letters.split('');

            // Setting up the columns
            var fontSize = 10,
                columns = canvas.width / fontSize;

            // Setting up the drops
            var drops = [];
            for (var i = 0; i < columns; i++) {
              drops[i] = 1;
            }

            // Setting up the draw function
            function draw() {
              ctx.fillStyle = 'rgba(0, 0, 0, .1)';
              ctx.fillRect(0, 0, canvas.width, canvas.height);
              for (var i = 0; i < drops.length; i++) {
                var text = letters[Math.floor(Math.random() * letters.length)];
                ctx.fillStyle = '#eeeeee';
                ctx.fillText(text, i * fontSize, drops[i] * fontSize);
                drops[i]++;
                if (drops[i] * fontSize > canvas.height && Math.random() > .95) {
                  drops[i] = 0;
                }
              }
            }

            // Loop the animation
            setInterval(draw, 90);
          </script>
        </body>
    </html>
